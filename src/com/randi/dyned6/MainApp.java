package com.randi.dyned6;import org.json.me.JSONArray;import net.rim.blackberry.api.homescreen.HomeScreen;import net.rim.blackberry.api.messagelist.ApplicationIcon;import net.rim.blackberry.api.messagelist.ApplicationIndicator;import net.rim.blackberry.api.messagelist.ApplicationIndicatorRegistry;import net.rim.device.api.system.Bitmap;import net.rim.device.api.system.Display;import net.rim.device.api.system.EncodedImage;import net.rim.device.api.ui.Screen;import net.rim.device.api.ui.Ui;import net.rim.device.api.ui.UiApplication;import net.rim.device.api.ui.UiEngineInstance;import com.randi.dyned6.model.persistable.AvatarManager;import com.randi.dyned6.model.persistable.EducationManager;import com.randi.dyned6.model.persistable.LoginHistoryManager;import com.randi.dyned6.model.persistable.NotificationManager;import com.randi.dyned6.model.persistable.SessionManager;import com.randi.dyned6.view.LoginScreen;import com.randi.dyned6.view.SplashScreen;/** * MainApp class. *  * @author Randi Waranugraha * */public class MainApp extends UiApplication {	public static void main(String[] args) {		if(args != null && args.length > 0){			if(args.length == 1 && args[0].equals("startup")){				new BackgroundApp().enterEventDispatcher();			}		} else {			new MainApp().enterEventDispatcher();					}	}	public MainApp() {		NotificationManager notificationManager = NotificationManager.getInstance();		if(notificationManager.isNotified()){			EncodedImage icon = EncodedImage.getEncodedImageResource("icon_indicator.png");			ApplicationIcon applicationIcon = new ApplicationIcon(icon);			Bitmap homeIcon = Bitmap.getBitmapResource("icon.png");			try {				ApplicationIndicatorRegistry indicatorRegistry = ApplicationIndicatorRegistry.getInstance();				ApplicationIndicator appIndicator = indicatorRegistry.getApplicationIndicator();				appIndicator.setIcon(applicationIcon);								HomeScreen.updateIcon(homeIcon, 0);			} catch (Exception e) {			}			notificationManager.setNotified(false);		}				UiEngineInstance engine = Ui.getUiEngineInstance();		engine.setAcceptableDirections(Display.ORIENTATION_PORTRAIT | Display.DIRECTION_NORTH);		pushScreen(new SplashScreen());	}	/**	 * Static class for exit Application.	 */	public static void exitApplication(){		System.exit(0);	}		/**	 * Static class for logout current user.	 * 	 */	public static void logout(){		SessionManager sessionManager = SessionManager.getInstance();		String username = sessionManager.getUsername();		if(username != null && username.length() >= 0){			LoginHistoryManager historyManager = LoginHistoryManager.getInstance();			if(historyManager.isUser(username)){				historyManager.backup(username, SessionManager.backup(), AvatarManager.backup(), EducationManager.backup());			}					}				SessionManager.clear();				EducationManager.clear();		AvatarManager.clear();		NotificationManager.clear();				synchronized (UiApplication.getEventLock()) {			popAllScreen();			UiApplication.getUiApplication().pushScreen(new LoginScreen());		}	}	/**	 * Static class to clear screen from stack.	 */	public static void popAllScreen(){		int screenCount = UiApplication.getUiApplication().getScreenCount();		for(int i = 0; i < screenCount; i++) {			Screen screen = UiApplication.getUiApplication().getActiveScreen();			UiApplication.getUiApplication().popScreen(screen);		}	}}